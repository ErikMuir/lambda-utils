{"version":3,"sources":["../../src/utilities/PrimitiveKeyValuePair.js"],"names":["PrimitiveKeyValuePair","constructor","key","value","TypeError","_allowedTypes","includes","_validateKey","_validateValue","_key","_value","newValue","Error"],"mappings":";;;;;;;;;AAAe,MAAMA,qBAAN,CAA4B;AACzCC,EAAAA,WAAW,CAACC,IAAD,EAAMC,MAAN,EAAa;AAAA,0CAkBTD,GAAG,IAAI;AACpB,UAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3B,cAAM,IAAIE,SAAJ,CAAc,6BAAd,CAAN;AACD;AACF,KAtBuB;;AAAA,4CAwBPD,KAAK,IAAI;AACxB,UAAI,CAAC,KAAKE,aAAL,CAAmBC,QAAnB,CAA4B,OAAOH,KAAnC,CAAL,EAAgD;AAC9C,cAAM,IAAIC,SAAJ,CAAc,mDAAd,CAAN;AACD;AACF,KA5BuB;;AACtB,SAAKC,aAAL,GAAqB,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,CAArB;;AACA,SAAKE,YAAL,CAAkBL,IAAlB;;AACA,SAAKM,cAAL,CAAoBL,MAApB;;AAEA,SAAKM,IAAL,GAAYP,IAAZ;AACA,SAAKQ,MAAL,GAAcP,MAAd;AACD;;AAED,MAAID,GAAJ,GAAU;AAAE,WAAO,KAAKO,IAAZ;AAAmB;;AAC/B,MAAIP,GAAJ,CAAQS,QAAR,EAAkB;AAAE,UAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;AAAwC;;AAE5D,MAAIT,KAAJ,GAAY;AAAE,WAAO,KAAKO,MAAZ;AAAqB;;AACnC,MAAIP,KAAJ,CAAUQ,QAAV,EAAoB;AAClB,SAAKH,cAAL,CAAoBG,QAApB;;AACA,SAAKD,MAAL,GAAcC,QAAd;AACD;;AAjBwC","sourcesContent":["export default class PrimitiveKeyValuePair {\r\n  constructor(key, value) {\r\n    this._allowedTypes = ['string', 'number', 'boolean'];\r\n    this._validateKey(key);\r\n    this._validateValue(value);\r\n\r\n    this._key = key;\r\n    this._value = value;\r\n  }\r\n\r\n  get key() { return this._key; }\r\n  set key(newValue) { throw new Error('Keys are read-only'); }\r\n\r\n  get value() { return this._value; }\r\n  set value(newValue) {\r\n    this._validateValue(newValue);\r\n    this._value = newValue;\r\n  }\r\n\r\n  _validateKey = key => {\r\n    if (typeof key !== 'string') {\r\n      throw new TypeError('Keys must be of type string');\r\n    }\r\n  };\r\n\r\n  _validateValue = value => {\r\n    if (!this._allowedTypes.includes(typeof value)) {\r\n      throw new TypeError('Values must be of type string, number, or boolean');\r\n    }\r\n  };\r\n}\r\n"],"file":"PrimitiveKeyValuePair.js"}